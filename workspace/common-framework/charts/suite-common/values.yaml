suite-auth:
  enabled: true
  image:
    repository: suite-auth
    tag: 0.1-6926be6
    pullPolicy: Always
  service:
    port: 8080
  database:
    host: suite-postgresql
    username: quicksilver
    dbname: suite-auth
  # If true helm will generate ssl certificates for internal communication
  internalTls:
    enabled: true

suite-demo-hello:
  enabled: false
  image:
    repository: suite-demo-hello
    tag: 0.1-6926be6
    pullPolicy: Always
  service:
    port: 8080
  internalTls:
    enabled: true

suite-demo-ui:
  enabled: false
  image:
    repository: suite-demo-ui
    tag: 0.1-6926be6
    pullPolicy: Always
  service:
    port: 8080

suite-demo-nats-client:
  enabled: false
  image:
    repository: suite-demo-nats-client
    tag: 0.1-6926be6
    pullPolicy: Always
  internalTls:
    enabled: true

suite-gateway:
  enabled: true
  image:
    repository: suite-gateway
    tag: 0.1-6926be6
    pullPolicy: Always
  service:
    port: 10080
  service2:
    port: 30000
    httpPort: 80
  internalTls:
    enabled: true

suite-idm:
  enabled: true
  image:
    repository: suite-idm
    tag: 0.1-6926be6
    pullPolicy: Always
  service:
    port: 8080
  database:
    host: suite-postgresql
    username: quicksilver
    dbname: suite-idm
  internalTls:
    enabled: true

suite-jwt-keys:
  enabled: true
  image:
    repository: suite-jwt-keys
    tag: 0.1-6926be6
    pullPolicy: Always
  service:
    port: 8080
  database:
    host: suite-postgresql
    username: quicksilver
    dbname: suite-jwt-keys
  internalTls:
    enabled: true

suite-password:
  enabled: true
  image:
    repository: suite-password
    tag: 0.1-6926be6
    pullPolicy: Always
  service:
    port: 8080
  database:
    host: suite-postgresql
    username: quicksilver
    dbname: suite-password
  internalTls:
    enabled: true

suite-prodregistry:
  enabled: true
  image:
    repository: suite-prodregistry
    tag: 0.1-6926be6
    pullPolicy: Always
  service:
    port: 8080
  internalTls:
    enabled: true

suite-cloudconfig:
  enabled: true
  image:
    repository: suite-cloudconfig
    tag: 0.1-6926be6
    pullPolicy: Always
  service:
    port: 8080
  internalTls:
    enabled: true

suite-svc-register:
  enabled: true
  internalTls:
    enabled: true

suite-kafka:
  #
  # Make suite-zookeeper.enabled: true when enabling suite-kafka
  #
  enabled: false
  #
  replicas: 1
  persistence:
    enabled: false
  ## Configuration Overrides. Specify any Kafka settings you would like set on the StatefulSet
  ## here in map format, as defined in the official docs.
  ## ref: https://kafka.apache.org/documentation/#brokerconfigs
  ##
  configurationOverrides:
    "offsets.topic.replication.factor": 1
    # "auto.leader.rebalance.enable": true
    # "auto.create.topics.enable": true
    # "controlled.shutdown.enable": true
    # "controlled.shutdown.max.retries": 100
    ## Options required for external access via NodePort
    ## ref:
    ## - http://kafka.apache.org/documentation/#security_configbroker
    ## - https://cwiki.apache.org/confluence/display/KAFKA/KIP-103%3A+Separation+of+Internal+and+External+traffic
    ##
    ## Setting "advertised.listeners" here appends to "PLAINTEXT://:9092,"
    # "advertised.listeners": |-
    #   EXTERNAL://kafka.cluster.local:$((31090 + ))
    # "listener.security.protocol.map": |-
    #   PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
    "advertised.listeners": SSL://:9094,BROKER://:9093
    "listener.security.protocol.map": |-
      PLAINTEXT:PLAINTEXT,SSL:SSL,BROKER:SSL
    "inter.broker.listener.name": BROKER

  internalTls:
    mountPath: "/secrets/ssl"
    enabled: true

suite-zookeeper:
  enabled: false
  servers: 1
  heap: 512M
  resources:
    requests:
      cpu: 400m
    limits:
      cpu: 400m
  internalTls:
    enabled: true

mongodb:
  enabled: false

suite-nats:
  enabled: true

suite-postgresql:
  enabled: true
  postgresUser: quicksilver
  # existingSecret: common-framework-suite-postgresql

suite-license:
  enabled: true
  image:
    repository: suite-license
    tag: 0.1-6926be6
    pullPolicy: Always
  service:
    port: 8080
  database:
    host: suite-postgresql
    username: quicksilver
    dbname: suite-license
  internalTls:
    enabled: true

suite-email:
  enabled: true
  image:
    repository: suite-email
    tag: 0.1-6926be6
    pullPolicy: Always
  service:
    port: 8080
  database:
    host: suite-postgresql
    username: quicksilver
    dbname: suite-email
  internalTls:
    enabled: true

suite-cryptoservice:
  enabled: true
  image:
    repository: suite-cryptoservice
    tag: 0.1-6926be6
    pullPolicy: Always
  service:
    port: 8080
  database:
    host: suite-postgresql
    username: quicksilver
    dbname: suite-cryptoservice
  internalTls:
    enabled: true

suite-monitor:
  enabled: true
  image:
    repository: suite-monitor
    tag: 0.1-6926be6
    pullPolicy: Always
  service:
    port: 8080
  database:
    host: suite-postgresql
    username: quicksilver
    dbname: suite-monitor

suite-monitoring:
  enabled: true

suite-res-mgmt:
  enabled: true
  image:
    repository: suite-res-mgmt
    tag: 0.1-6926be6
    pullPolicy: Always
  service:
    port: 8080
  database:
    host: suite-postgresql
    username: quicksilver
    dbname: suite-res-mgmt
  internalTls:
    enabled: true

suite-logs:
  enabled: true
  image:
    repository: suite-logs
    tag: 0.1-6926be6
    pullPolicy: Always
  service:
    port: 8080
  internalTls:
    enabled: true

nginx-ingress:
  enabled: true
  rbac:
    create: true
  controller:
    service:
      type: NodePort
    scope:
      enabled: true
    defaultBackendService: suite-gateway
    extraArgs:
      default-ssl-certificate: "$(POD_NAMESPACE)/suite-gateway-external-tls-secrets"

suite-mng:
  enabled: true
  image:
    repository: suite-resapi
    tag: 0.1-6926be6
    pullPolicy: Always


suite-logging:
  enabled: true

global:
  registry: devhub-docker.cisco.com
  repository: multicloudsuite-dev
  imagePullSecret: suite-image-pull-secret
  serviceType: NodePort
  namespace:
  launchedByInstaller: false
  suiteMonitoring: true
  suiteLogging: true
