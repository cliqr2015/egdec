{{- /* Exit chart if cert-manager is missing */ -}}
{{ if not (.Capabilities.APIVersions.Has "certmanager.k8s.io/v1alpha1") }}
{{ required "\n\nMissing cert-manager\nRun this command to install: \nhelm install --name cert-manager --namespace kube-system stable/cert-manager" .certmanager }}
{{ end }}

{{- if .Release.IsInstall }}
{{- /* Generate CA */ -}}
{{- $ca := genCA "svc-cat-ca" 3650 -}}
{{- $domain1 := .Release.Namespace -}}

apiVersion: v1
kind: Secret
metadata:
  name: ca-key-pair
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-delete-policy": hook-failed
  labels:
    app: {{ template "suite-common.name" . }}
    chart: {{ template "suite-common.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
type: Opaque
data:
  tls.crt: {{ $ca.Cert | b64enc }}
  tls.key: {{ $ca.Key | b64enc }}
  ca.crt: {{ $ca.Cert | b64enc }}
  ca.key: {{ $ca.Key | b64enc }}
{{- end }}
